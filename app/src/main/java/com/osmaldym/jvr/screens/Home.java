/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.osmaldym.jvr.screens;

import com.osmaldym.jvr.tools.FFMPEG;
import com.osmaldym.jvr.tools.Tools;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.stream.IntStream;

/**
 *
 * @author Osmaldy Maldonado
 */
public class Home extends javax.swing.JFrame {
    static Home home;
    boolean stop = true;
    ArrayList<HashMap<String, String>> recordResponses = new ArrayList<>();
    FFMPEG ffmpeg = new FFMPEG();
    
    /**
     * Creates new form Home
     */
    public Home() {
        home = this;
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    
    private void getEveryRecordLine(){
        new Thread(){
            static int lastSize = 0;
            static int lastPosition = 0;
            
            private void action() {
                FpsAv.setText(recordResponses.getLast().get("q"));
                Time.setText(recordResponses.getLast().get("time"));
            }

            private void recordInfoToKeyValue(String line) {
                if (line.startsWith("frame=") && Integer.parseInt(line.split("=")[1].trim().split(" ")[0]) > 0) {
                    List<String> arr = new ArrayList<>(Arrays.asList(line.split("=")));

                    while (lastSize < arr.size()){
                        lastSize = arr.size();
                        IntStream.range(lastPosition, lastSize).forEach(i -> {
                            String toSet = arr.get(i).trim();
                            if (toSet.contains(" ")) {
                                String[] newListElsToAdd = toSet.split(" ");
                                arr.remove(i);
                                arr.addAll(i, Arrays.asList(newListElsToAdd));
                                return;
                            }
                            arr.set(i, toSet);
                        });
                        lastPosition = lastSize;
                    }

                    lastPosition = lastSize = 0;
                    String[][] entries = Tools.convertToEntries(arr.toArray(String[]::new));
                    HashMap<String, String> data = new HashMap<>();
                    for (String[] x : entries) data.put(x[0].trim(), x[1].trim());
                    recordResponses.add(data);
                    action();
                }
            }
            
            @Override
            public void run() {
                try {
                    String line;
                    while ((line = ffmpeg.getOutput().readLine()) != null)
                        recordInfoToKeyValue(line);
                } catch (IOException e) {}
            }
        }.start();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Center = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        Column = new javax.swing.JPanel();
        Row3 = new javax.swing.JPanel();
        RecordBtn = new javax.swing.JButton();
        Row1 = new javax.swing.JPanel();
        FpsAvTitle = new javax.swing.JLabel();
        FpsAv = new javax.swing.JLabel();
        Row2 = new javax.swing.JPanel();
        TimeTitle = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 0, 0));

        Center.setBackground(new java.awt.Color(51, 51, 51));
        Center.setPreferredSize(new java.awt.Dimension(500, 500));
        Center.setLayout(new javax.swing.BoxLayout(Center, javax.swing.BoxLayout.LINE_AXIS));
        Center.add(filler1);

        Column.setBackground(null);
        Column.setLayout(new javax.swing.BoxLayout(Column, javax.swing.BoxLayout.PAGE_AXIS));

        Row3.setBackground(null);
        Row3.setForeground(null);
        Row3.setLayout(new javax.swing.BoxLayout(Row3, javax.swing.BoxLayout.LINE_AXIS));

        RecordBtn.setForeground(new java.awt.Color(255, 255, 255));
        RecordBtn.setText("Record");
        RecordBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        RecordBtn.setContentAreaFilled(false);
        RecordBtn.setFocusPainted(false);
        RecordBtn.setMargin(new java.awt.Insets(15, 15, 15, 15));
        RecordBtn.setMaximumSize(new java.awt.Dimension(200, 30));
        RecordBtn.setPreferredSize(new java.awt.Dimension(100, 20));
        RecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordBtnActionPerformed(evt);
            }
        });
        Row3.add(RecordBtn);

        Column.add(Row3);

        Row1.setBackground(null);
        Row1.setForeground(null);
        Row1.setLayout(new javax.swing.BoxLayout(Row1, javax.swing.BoxLayout.LINE_AXIS));

        FpsAvTitle.setForeground(new java.awt.Color(255, 255, 255));
        FpsAvTitle.setText("FPS AV: ");
        Row1.add(FpsAvTitle);

        FpsAv.setForeground(new java.awt.Color(255, 255, 255));
        FpsAv.setText("0");
        FpsAv.setMaximumSize(new java.awt.Dimension(99999, 13));
        Row1.add(FpsAv);

        Column.add(Row1);

        Row2.setBackground(null);
        Row2.setForeground(null);
        Row2.setLayout(new javax.swing.BoxLayout(Row2, javax.swing.BoxLayout.LINE_AXIS));

        TimeTitle.setForeground(new java.awt.Color(255, 255, 255));
        TimeTitle.setText("Time: ");
        TimeTitle.setMaximumSize(null);
        TimeTitle.setMinimumSize(null);
        TimeTitle.setPreferredSize(null);
        Row2.add(TimeTitle);

        Time.setForeground(new java.awt.Color(255, 255, 255));
        Time.setText("0");
        Time.setMaximumSize(new java.awt.Dimension(99999, 13));
        Row2.add(Time);

        Column.add(Row2);

        Center.add(Column);
        Center.add(filler2);

        getContentPane().add(Center);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordBtnActionPerformed
        stop = !stop;

        try {
            if (stop){
                ffmpeg.stop();
                RecordBtn.setText("Record");
                Time.setText("0.0");
                FpsAv.setText("0");
                return;
            }
            
            RecordBtn.setText("Stop");
            ffmpeg.record();
            
            getEveryRecordLine();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(home, e.getMessage(), "Cannot record", JOptionPane.ERROR_MESSAGE);
            RecordBtn.setText("Record");
            stop = true;
        }
    }//GEN-LAST:event_RecordBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Center;
    private javax.swing.JPanel Column;
    private static javax.swing.JLabel FpsAv;
    private javax.swing.JLabel FpsAvTitle;
    private static javax.swing.JButton RecordBtn;
    private javax.swing.JPanel Row1;
    private javax.swing.JPanel Row2;
    private javax.swing.JPanel Row3;
    private static javax.swing.JLabel Time;
    private javax.swing.JLabel TimeTitle;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    // End of variables declaration//GEN-END:variables
}
